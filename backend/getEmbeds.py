# -*- coding: utf-8 -*-
# """cart-genie.ipynb
#
# Automatically generated by Colab.
# """
#
#
# !pip install flask  sentence-transformers pillow
from flask import Flask, request, jsonify
from sentence_transformers import SentenceTransformer
from PIL import Image
import numpy as np
import os

IMAGE_WEIGHT = 0.5
TEXT_WEIGHT = 0.5

model = SentenceTransformer('clip-ViT-B-32')

def getEmbeddingFromImage(file):
    image = Image.open(file.stream)
    embedding = model.encode(image)
    return embedding.tolist()


app = Flask(__name__)

@app.route("/", methods = ["GET"])
def test():
    return jsonify({"status": "working"}), 200


@app.route("/upload", methods = ["POST"])
def upload():
      if "session" not in request.form:
           return jsonify({"error": "session not found"}), 401

      imageEmbeds = []
      if "images" in request.files and "text" in request.form:
          for img in request.files.getlist("images"):
            imageEmbeds.append(getEmbeddingFromImage(img))
          textEmbed = model.encode(request.form["text"]).tolist()

          imageEmbeds = np.mean(np.array(imageEmbeds), axis = 0)
          textEmbed = np.array(textEmbed)

          retur = IMAGE_WEIGHT * imageEmbeds + TEXT_WEIGHT * textEmbed
          return jsonify(retur.tolist()), 200


      elif "images" in request.files:
          for img in request.files.getlist("images"):
            imageEmbeds.append(getEmbeddingFromImage(img))

          imageEmbeds = np.mean(np.array(imageEmbeds), axis = 0)
          return jsonify(imageEmbeds.tolist()), 200


      elif "text" in request.form:
          textEmbed = model.encode(request.form["text"]).tolist()
          return jsonify(textEmbed), 200

      else:
          print("request failed: no files attached.")
          return jsonify({"error": "prompt not found", 
                          "session": request.form["session"]}), 400



if __name__ == "__main__":
  app.run(host='0.0.0.0' , port=os.environ["PORT"], debug = False)
